# -*- coding: utf-8 -*-
"""Assignment1code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R_uZLzLN977NzELtj1CCk-G6DYXF3kSz
"""

import pandas as pd
import cv2 
import matplotlib.pyplot as plt
import numpy as np

lemon_color= cv2.imread("C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/Input/image0.jpg")
orange_color= cv2.imread("C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/Input/image1.jpg")
apple_color= cv2.imread("C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/Input/image2.jpg")

plt.imshow(lemon_color[:,:,0])

plt.imshow(lemon_color[:,:,1])

plt.imshow(lemon_color[:,:,2])

plt.imshow(orange_color[:,:,0])

plt.imshow(orange_color[:,:,1])

plt.imshow(orange_color[:,:,2])

plt.imshow(apple_color[:,:,0])

plt.imshow(apple_color[:,:,1])

plt.imshow(apple_color[:,:,2])

lemon = cv2.cvtColor(lemon_color, cv2.COLOR_BGR2GRAY)
orange = cv2.cvtColor(orange_color, cv2.COLOR_BGR2GRAY)
apple = cv2.cvtColor(apple_color, cv2.COLOR_BGR2GRAY)

#Plotting grey-scale image Along with their dimentions
plt.imshow(lemon, cmap=plt.get_cmap('gray'))
plt.axis('off')
print("Statistics", lemon.min(), lemon.max(), round(lemon.mean(),3), round(lemon.std(),4))

lemon.shape

apple.shape

orange.shape

plt.imshow(orange, cmap=plt.get_cmap('gray'))
plt.axis('off')
print("Statistics", orange.min(), orange.max(), round(orange.mean(),3), round(orange.std(),4))

plt.imshow(apple, cmap=plt.get_cmap('gray'))
plt.axis('off')
print("Statistics", apple.min(), apple.max(), round(apple.mean(),3), round(apple.std(),4))

cv2.imwrite('C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/outputs/1.jpg', lemon)

cv2.imwrite('C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/outputs/2.jpg', orange)

cv2.imwrite('C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/outputs/3.jpg', apple)

def Resize(width_val,height_val,path):
    img=cv2.imread(path)
    print(img.shape)
    width,height=width_val,height_val
    imgResize = cv2.resize(img,(width.height))
    print(imgResize.shape)
    plt.imshow(imgResize)

path = "C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/outputs/1.jpg"
img  = cv2.imread(path)
print(img.shape)

width_val ,height_val = 192 , 264
imgResize = cv2.resize(img,(width_val,height_val))
imgResize = cv2.normalize(lemon.astype('float'), None, 0.0, 1.0, cv2.NORM_MINMAX)*255

plt.imshow(imgResize)
print(imgResize.shape)

path = "C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/outputs/2.jpg"
img2  = cv2.imread(path)
print(img2.shape)

width_val ,height_val = 192 , 264
img2Resize = cv2.resize(img2,(width_val,height_val))
img2Resize = cv2.normalize(orange.astype('float'), None, 0.0, 1.0, cv2.NORM_MINMAX)*255
plt.imshow(img2Resize)
print(img2Resize.shape)

path = "C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/outputs/3.jpg"
img3  = cv2.imread(path)
print(img3.shape)

width_val ,height_val = 192 , 264
img3Resize = cv2.resize(img3,(width_val,height_val))
img3Resize = cv2.normalize(apple.astype('float'), None, 0.0, 1.0, cv2.NORM_MINMAX)*255

plt.imshow(img3Resize)
print(img3Resize.shape)

"""Task-5:"""

LL = round(((height_val)*(width_val))/144)
flatLL = np.zeros((LL,145),np.uint8)
k = 0
for i in range(0,height_val,12):
    for j in range(0,width_val,12):
        crop_tmp = lemon[i:i+12,j:j+12]
        flatLL[k,0:144] = crop_tmp.flatten()
        k = k + 1
        
fspaceL= pd.DataFrame(flatLL) 
fspaceL.to_csv('C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/Outputs/FSpaceLemon.csv', 
index=False)

OO = round(((height_val)*(width_val))/144)
flatOO = np.ones((OO,145),np.uint8)
k = 0
for i in range(0,height_val,12):
        for j in range(0,width_val,12):
            crop_tmp1 = orange[i:i+12,j:j+12]
            flatOO[k,0:144] = crop_tmp1.flatten()
            k = k + 1
 
fspaceO= pd.DataFrame(flatOO) 
fspaceO.to_csv('C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/Outputs/FSpaceOrange.csv', 
index=False)

AA = round(((height_val)*(width_val))/144)
flatAA = np.full((AA,145),2,np.uint8)
k = 0
for i in range(0,height_val,12):
        for j in range(0,width_val,12):
            crop_tmp2 = apple[i:i+12,j:j+12]
            flatAA[k,0:144] = crop_tmp2.flatten()
            k = k + 1
 
fspaceA= pd.DataFrame(flatAA) 
fspaceA.to_csv('C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/Outputs/FSpaceApple.csv', 
index=False)

"""Task-6:"""

Lem = round(((height_val-12)*(width_val-12)))
flatLem = np.zeros((Lem, 145),np.uint8)
k = 0
for i in range(0,height_val-12):
        for j in range(0,width_val-12):
            crop_tmp = lemon[i:i+12,j:j+12]
            flatLem[k,0:144] = crop_tmp.flatten()
            k = k + 1
 
fspaceSL = pd.DataFrame(flatLem)
fspaceSL.to_csv('C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/Outputs/FSpaceLemonSD.csv',index=False)

Oran = round(((height_val-12)*(width_val-12)))
flatOran = np.ones((Oran, 145),np.uint8)
k = 0
for i in range(0,height_val-12):
        for j in range(0,width_val-12):
            crop_tmp1 = orange[i:i+12,j:j+12]
            flatOran[k,0:144] = crop_tmp1.flatten()
            k = k + 1
 
fspaceSO = pd.DataFrame(flatOran)
fspaceSO.to_csv('C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/Outputs/FSpaceOrangeSD.csv',index=False)

App = round(((height_val-12)*(width_val-12)))
flatApp = np.full((App, 145),np.uint8)
k = 0
for i in range(0,height_val-12):
        for j in range(0,width_val-12):
            crop_tmp2 = apple[i:i+12,j:j+12]
            flatApp[k,0:144] = crop_tmp2.flatten()
            k = k + 1
 
fspaceSA = pd.DataFrame(flatApp)
fspaceSA.to_csv('C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/Outputs/FSpaceAppleSD.csv',index=False)

"""Task-7:

No Of Obeservations of datasets:
Block-Feature Data:
"""

print("Number of observations in Lemon in Feature-vector is:",len(fspaceL))
print("Number of observations in Orange in Feature vector is :",len(fspaceO))
print("Number of observations in Apple in Feature vector is :",len(fspaceA))

"""Dimension of these datasets:"""

dim_fspaceL=fspaceL.shape[1]-1
dim_fspaceO=fspaceO.shape[1]-1
dim_fspaceA=fspaceA.shape[1]-1

print("Dimension of Lemon in 12*12 block feature is :",dim_fspaceL)
print("Dimension of Orange in 12*12 block feature is :",dim_fspaceO)
print("Dimension of Apple in 12*12 block feature is :",dim_fspaceA)

"""Mean of each feature:"""

Lemon_mean = round(fspaceL[fspaceL.columns[0:144]].mean(),3)
Orange_mean =  round(fspaceO[fspaceO.columns[0:144]].mean(),3)
Apple_mean = round(fspaceA[fspaceA.columns[0:144]].mean(),3)

plt.plot(Lemon_mean)
plt.plot(Orange_mean)
plt.plot(Apple_mean)

print("Mean of Lemon in block feature is :\n",Lemon_mean)
print("Mean of Orange in block feature is :\n",Orange_mean)
print("Mean of Apple in block feature is :\n",Apple_mean)

lemon_std = round(fspaceL[fspaceL.columns[0:144]].std(),3)
orange_std = round(fspaceO[fspaceO.columns[0:144]].std(),3)
apple_std = round(fspaceA[fspaceA.columns[0:144]].std(),3)

print("Standard Deviation of Lemon in  block feature is :\n",lemon_std)
print("Standard Deviation of Orange in  block feature is :\n",orange_std)
print("Standard Deviation of Apple in  block feature is :\n",apple_std)
plt.plot(lemon_std)
plt.plot(orange_std)
plt.plot(apple_std)

"""Scatterplots:"""

s= np.random.randint(144)
t= np.random.randint(144)
fspaceL.plot.scatter(x=s,y=t, c='Red')
fspaceO.plot.scatter(x=s,y=t, c='Green')
fspaceA.plot.scatter(x=s,y=t, c='Blue')

"""Histogram:"""

random_value=np.random.randint(144)
fspaceL[random_value].hist(bins=144)
fspaceO[random_value].hist(bins=144)
fspaceA[random_value].hist(bins=144)

"""For Sliding Block-Feature Data:"""

print("Number of observations in Lemon in Sliding Block Feature-vector is:",len(fspaceSL))
print("Number of observations in Orange in Sliding Block Feature vector is :",len(fspaceSO))
print("Number of observations in Apple in Sliding Block Feature vector is :",len(fspaceSA))

dim_fspaceSL=fspaceSL.shape[1]-1
dim_fspaceSO=fspaceSO.shape[1]-1
dim_fspaceSA=fspaceSA.shape[1]-1

print("Dimension of Lemon in 12*12 Sliding block feature is :",dim_fspaceSL)
print("Dimension of Orange in 12*12 Sliding block feature is :",dim_fspaceSO)
print("Dimension of Apple in 12*12 Sliding block feature is :",dim_fspaceSA)

Lemons_mean = round(fspaceSL[fspaceSL.columns[0:144]].mean(),3)
Oranges_mean =  round(fspaceSO[fspaceSO.columns[0:144]].mean(),3)
Apples_mean = round(fspaceSA[fspaceSA.columns[0:144]].mean(),3)

plt.plot(Lemons_mean)
plt.plot(Oranges_mean)
plt.plot(Apples_mean)

print("Mean of Lemon in block feature is :\n",Lemons_mean)
print("Mean of Orange in block feature is :\n",Oranges_mean)
print("Mean of Apple in block feature is :\n",Apples_mean)

"""Standard Deviation:"""

lemons_std = round(fspaceSL[fspaceSL.columns[0:144]].std(),3)
oranges_std = round(fspaceSO[fspaceSO.columns[0:144]].std(),3)
apples_std = round(fspaceSA[fspaceSA.columns[0:144]].std(),3)

print("Standard Deviation of Lemon in  block feature is :\n",lemons_std)
print("Standard Deviation of Orange in  block feature is :\n",oranges_std)
print("Standard Deviation of Apple in  block feature is :\n",apples_std)
plt.plot(lemons_std)
plt.plot(oranges_std)
plt.plot(apples_std)

"""scatterplot:"""

s= np.random.randint(144)
t= np.random.randint(144)
fspaceSL.plot.scatter(x=s,y=t, c='Red')
fspaceSO.plot.scatter(x=s,y=t, c='Green')
fspaceSA.plot.scatter(x=s,y=t, c='Blue')

"""Histogram:"""

random_value=np.random.randint(144)
fspaceSL[random_value].hist(bins=144)
fspaceSO[random_value].hist(bins=144)
fspaceSA[random_value].hist(bins=144)

"""Task-8:"""

frames = [fspaceL,fspaceO]
merged = pd.concat(frames)

M = np.arange(len(merged))
frame_merged = np.random.permutation(M)

frame_merged=merged.sample(frac=1).reset_index(drop=True)
frame_merged.to_csv('C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/Outputs/Image01.csv', index=False)

frames_3 = [fspaceL,fspaceO,fspaceA]
merged_3 = pd.concat(frames_3)

indx = np.arange(len(merged_3))
ran_mged_3 = np.random.permutation(indx)

ran_mged_3=merged_3.sample(frac=1).reset_index(drop=True)
ran_mged_3.to_csv('C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/Outputs/Image012.csv', index=False)

"""Task-9:"""

ax = plt.axes()

ax.scatter(fspaceL[fspaceL.columns[3]],fspaceL[fspaceL.columns[5]], c="red")
ax.scatter(fspaceO[fspaceO.columns[3]],fspaceO[fspaceO.columns[5]], c="Green")

ax.set_xlabel("Lemon")
ax.set_ylabel("Orange")

from mpl_toolkits.mplot3d import Axes3D
ax = plt.axes(projection='3d')

ax.scatter(fspaceL[fspaceL.columns[10]],fspaceL[fspaceL.columns[12]], c="Red")
ax.scatter(fspaceO[fspaceO.columns[10]],fspaceO[fspaceO.columns[12]], c="Green")
ax.scatter(fspaceA[fspaceA.columns[10]],fspaceA[fspaceA.columns[12]], c="Blue")

ax.set_xlabel("Lemon")
ax.set_ylabel("Orange")
ax.set_zlabel("Apple")

"""Task-10:"""

import glob
images=[cv2.imread(file) for file in glob.glob("C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/Input/*.jpg")]

cv_image=[]
for image in glob.glob("C:/Users/hp/Desktop/2nd Semester/Big Data And Machine Learning/Assignment1/Input/*.jpg"):
    file_image=cv2.imread(image)
    cv_image.append(file_image)